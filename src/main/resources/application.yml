spring:
    application:
        name: ${artifactId}
        version: ${version}
    jmx.enabled: true
    cache:
        type: redis
    data:
        redis:
            host: "\${REDIS_HOST:localhost}"
            port: "\${REDIS_PORT:6380}"
            password: "\${REDIS_PASSWORD:}"
            ssl.enabled: "\${REDIS_SSL_ENABLED:true}"


jwt:
    audience: "\${JWT_TOKEN_AUDIENCE:application-audience}"
    access-token:
        expire-in: "\${JWT_TOKEN_EXPIRATION_SECONDS:3600}"
        private-key: "\${JWT_TOKEN_PRIVATE_KEY:}"
        public-key: "\${JWT_TOKEN_PUBLIC_KEY:}"
    external-token:
        base-url: "\${JWT_EXTERNAL_TOKEN_BASE_URL:https://auth.server.com}"
        issuer: "\${JWT_EXTERNAL_TOKEN_ISS:externalauthentication-server-issuer}"


management:
    endpoint:
        health:
            probes.enabled: true
            group:
                readiness.include: "*"
                liveness.include: livenessState,diskSpace,ping
    endpoints:
        jmx:
            exposure.include: "*"
        web:
            exposure.include: info, health

app:
    # If true, it will expect the presence of the access organization inside the ID Token.
    # Thus it will register te relation between the operator and the relation with the provided roles.
    # If disabled, the admin should register the associations using the provided API (otherwise they will be disabled)
    enable-access-organization-mode: "\${ENABLE_ACCESS_ORGANIZATION_MODE:true}"